{
	"info": {
		"_postman_id": "0ca684ac-cd9c-4f5e-8390-8147dd61af8f",
		"name": "pet_friend_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18755421"
	},
	"item": [
		{
			"name": "Get API Key Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Создаём переменную авторизации\", function (){\r",
							"   let jsonData = JSON.parse(responseBody)\r",
							"    pm.collectionVariables.set(\"auth_key\", jsonData.key);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"followOriginalHttpMethod": true,
				"insecureHTTPParser": false,
				"followAuthorizationHeader": true,
				"tlsPreferServerCiphers": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{auth_key}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "API",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "email",
						"value": "tuktarov-1972@yandex.ru",
						"type": "text"
					},
					{
						"key": "password",
						"value": "pfv,tpb",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/key",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"key"
					]
				}
			},
			"response": []
		},
		{
			"name": "add new pets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"\tvar jsonData = JSON.parse(responseBody)\r",
							"    pm.collectionVariables.set(\"pet_id\", jsonData.id);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"\tvar jsonData = JSON.parse(responseBody)\r",
							"    pm.collectionVariables.set(\"name\", jsonData.name);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {},
				"followAuthorizationHeader": true,
				"insecureHTTPParser": false,
				"followOriginalHttpMethod": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{auth_key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Боб\",\r\n    \"animal_type\"  : \"корова\",\r\n     \"age\" : 3   \r\n}"
				},
				"url": {
					"raw": "{{url}}/api/create_pet_simple",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"create_pet_simple"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The response name not equal\", () => {\r",
							"const responseJson = pm.response.json();\r",
							"pm.expect(responseJson.name).not.to.be.equal('Боб');\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"\tvar jsonData = JSON.parse(responseBody)\r",
							"    pm.collectionVariables.set(\"name\", jsonData.name);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" :\"Бомбини\",\r\n    \"animal_type\" :\"морова\",\r\n     \"age\" : 5   \r\n}"
				},
				"url": {
					"raw": "{{url}}/api/pets/:pet_id",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"pets",
						":pet_id"
					],
					"variable": [
						{
							"key": "pet_id",
							"value": "{{pet_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get my pet's list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// не понимаю почему этот тест не проходит \r",
							"\r",
							" //pm.test(\"Response property matches environment variable\", function () {\r",
							"  //pm.expect(pm.response.json().pets[0], name).to.eql(pm.collectionVariables.get(\"name\"));\r",
							"//});\r",
							"\r",
							"\r",
							" ///pm.test(\"Response property matches environment variable\", function () {\r",
							"\t///pm.expect(pm.collectionVariables.get(\"name\")).to.eql(pm.response.json().pets[0], name);\r",
							"///});\r",
							"\r",
							"pm.test(\"first pets with new-created ID\", function () {\r",
							"    let jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(pm.collectionVariables.get(\"name\")).to.eql(jsonData.pets[0].name);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"followOriginalHttpMethod": false
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/pets?filter=my_pets",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"pets"
					],
					"query": [
						{
							"key": "filter",
							"value": "my_pets"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "auth_key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{auth_key}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://petfriends.skillfactory.ru",
			"type": "string"
		},
		{
			"key": "name",
			"value": "",
			"type": "string"
		},
		{
			"key": "age",
			"value": "",
			"type": "string"
		},
		{
			"key": "pet_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "auth_key",
			"value": "",
			"type": "string"
		}
	]
}